name: Publish Web App
on:
  push:
    branches:
      - 'main'
      - 'web_app'
  pull_request:
    branches:
      - 'main'
      - 'web_app'
      - 'sash'
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my_app
  ECS_SERVICE: my_web_service      
  ECS_CLUSTER: my_web_cluster
  ECS_TASK_DEFINITION: task-definition
                                               
  CONTAINER_NAME: my_app_flask           
                                                   
jobs:
   build:
    runs-on: ubuntu-latest
    steps:  
  
     - uses: actions/checkout@v3
       with:
        fetch-depth: 0



     - name: Generate semver
       id: version-generator
       run: |
        export ARTEFACT_VERSION=$(git describe --long --always)
        echo ::set-output name=ARTEFACT_VERSION::$ARTEFACT_VERSION

           
     
     - name: Update package.json version
       uses: jossef/action-set-json-field@v2
       with: 
         file: my_json.json
         field: Version
         value: ${{ steps.version-generator.outputs.ARTEFACT_VERSION }}
       
         
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
       with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1
       with:
        registry-type: 'public'

     - name: Build, tag, and push image to Amazon ECR
       id: build-image
       env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
       run: |
          docker build -t ${{ steps.version-generator.outputs.ARTEFACT_VERSION }} .
          docker push ${{ steps.version-generator.outputs.ARTEFACT_VERSION }}
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY"

     - name: Fill in the new image ID in the Amazon ECS task definition
       id: task-def
       uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
       with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

     - name: Deploy Amazon ECS task definition
       uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
       with:
          task-definition: ${{ steps.version-generator.outputs.ARTEFACT_VERSION }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true 
